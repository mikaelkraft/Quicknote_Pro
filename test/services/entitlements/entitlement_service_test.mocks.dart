// Mocks generated by Mockito 5.4.6 from annotations
// in quicknote_pro/test/services/entitlements/entitlement_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i5;

import 'package:in_app_purchase/in_app_purchase.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:quicknote_pro/services/billing/billing_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BillingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBillingService extends _i1.Mock implements _i2.BillingService {
  MockBillingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAvailable => (super.noSuchMethod(
        Invocation.getter(#isAvailable),
        returnValue: false,
      ) as bool);

  @override
  List<_i3.ProductDetails> get products => (super.noSuchMethod(
        Invocation.getter(#products),
        returnValue: <_i3.ProductDetails>[],
      ) as List<_i3.ProductDetails>);

  @override
  List<_i3.PurchaseDetails> get purchases => (super.noSuchMethod(
        Invocation.getter(#purchases),
        returnValue: <_i3.PurchaseDetails>[],
      ) as List<_i3.PurchaseDetails>);

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> purchaseProduct(String? productId) => (super.noSuchMethod(
        Invocation.method(
          #purchaseProduct,
          [productId],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> restorePurchases() => (super.noSuchMethod(
        Invocation.method(
          #restorePurchases,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i3.PurchaseDetails>> getActivePurchases() =>
      (super.noSuchMethod(
        Invocation.method(
          #getActivePurchases,
          [],
        ),
        returnValue: _i4.Future<List<_i3.PurchaseDetails>>.value(
            <_i3.PurchaseDetails>[]),
      ) as _i4.Future<List<_i3.PurchaseDetails>>);

  @override
  _i3.ProductDetails? getProductDetails(String? productId) =>
      (super.noSuchMethod(Invocation.method(
        #getProductDetails,
        [productId],
      )) as _i3.ProductDetails?);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
