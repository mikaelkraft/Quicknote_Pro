name: Apply Monetization v1 labels and milestone after PR merge
on:
  pull_request:
    types: [closed]
permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  apply:
    if: github.event.pull_request.merged == true && github.event.pull_request.number == 52
    runs-on: ubuntu-latest
    steps:
      - name: Ensure labels exist
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const labels = [
              {name: 'monetization', color: '0e8a16', description: ''},
              {name: 'v1', color: '5319e7', description: ''},
              {name: 'documentation', color: '0075ca', description: ''},
            ];
            for (const l of labels) {
              try {
                await github.rest.issues.getLabel({owner: context.repo.owner, repo: context.repo.repo, name: l.name});
              } catch (e) {
                if (e.status === 404) {
                  await github.rest.issues.createLabel({owner: context.repo.owner, repo: context.repo.repo, name: l.name, color: l.color, description: l.description});
                } else {
                  throw e;
                }
              }
            }

      - name: Ensure milestone exists and capture number
        id: milestone
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = 'Monetization v1';
            const due_on = '2025-08-20T23:59:59Z'; // adjust or remove if not needed
            const description = 'Monetization v1 milestone: analytics foundation, ads integration, pricing tiers.';
            const {data: milestones} = await github.rest.issues.listMilestones({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all'
            });
            let m = milestones.find(x => x.title === title);
            if (!m) {
              const res = await github.rest.issues.createMilestone({owner: context.repo.owner, repo: context.repo.repo, title, description, due_on});
              m = res.data;
            } else if (m.state !== 'open') {
              const res = await github.rest.issues.updateMilestone({owner: context.repo.owner, repo: context.repo.repo, milestone_number: m.number, state: 'open', description, due_on});
              m = res.data;
            }
            core.setOutput('number', String(m.number));

      - name: Apply labels and milestone to issues and PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const targets = [46, 48, 50, 45]; // last is PR (also an Issue)
            const labels = ['monetization','v1','documentation'];
            const milestone = Number('${{ steps.milestone.outputs.number }}');
            for (const n of targets) {
              await github.rest.issues.addLabels({owner: context.repo.owner, repo: context.repo.repo, issue_number: n, labels});
              await github.rest.issues.update({owner: context.repo.owner, repo: context.repo.repo, issue_number: n, milestone});
            }